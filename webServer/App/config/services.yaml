

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    default_apc_ttl: 30000
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/*/Domain'
            - '../src/Shared/*/*/Domain'
            - '../src/Shared/Uuid'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Dispenser\Controller\BaseController:
        calls:
            - method: setContainer
              arguments: [ '@service_container' ]

    App\Dispenser\Infrastructure\DispenserRepository\ApcDispenserRepo:
        class: App\Dispenser\Infrastructure\DispenserRepository\ApcDispenserRepo
        factory: ['App\Dispenser\Infrastructure\DispenserRepository\ApcDispenserRepo', 'getInstance']
        arguments: ['@app.apc_service', '%default_apc_ttl%']
        public: true
        autowire: false

    app.dispenser_repository:
        alias: App\Dispenser\Infrastructure\DispenserRepository\ApcDispenserRepo

    App\Dispenser\Application\CreateDispenser:
        class: App\Dispenser\Application\CreateDispenser
        arguments: ['@app.dispenser_repository']

    App\Dispenser\Domain\Contracts\IDispenserRepository: '@app.dispenser_repository'

    App\Dispenser\Application\Finder\FindDispenserById:
        class: App\Dispenser\Application\Finder\FindDispenserById
        arguments: ['@App\Dispenser\Infrastructure\DispenserRepository\ApcDispenserRepo']

    App\Dispenser\Application\UpdateDispenserStatus:
        class: App\Dispenser\Application\UpdateDispenserStatus
        arguments: ['@app.dispenser_repository']

    App\Dispenser\Application\AmountSpent:
        class: App\Dispenser\Application\AmountSpent
        arguments: ['@App\Dispenser\Application\Finder\FindDispenserById']

    App\Dispenser\Infrastructure\Responses\DispenserWithOutStateResponse:
        class: App\Dispenser\Infrastructure\Responses\DispenserWithOutStateResponse
        arguments: []

    app.dispenser_with_out_state_response:
        alias: App\Dispenser\Infrastructure\Responses\DispenserWithOutStateResponse

    App\Dispenser\Domain\Contracts\IFormatDispenserResponse: '@app.dispenser_with_out_state_response'

    App\Shared\Cache\Apc\Infrastructure\Apc:
        class: App\Shared\Cache\Apc\Infrastructure\Apc
        arguments: [ ]

    app.apc_service:
        alias: App\Shared\Cache\Apc\Infrastructure\Apc

    App\Shared\Cache\Apc\Domain\Contracts\IApcService: '@app.apc_service'